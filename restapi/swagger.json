{
    "swagger": "2.0",
    "info": {
        "version": "v1",
        "title": "TradingView Broker API",
        "description": "This documentation describes the TradingView REST API, which was developed for brokers that wish to take advantage of TradingView. Whether you license our [standalone Trading Terminal](https://www.tradingview.com/trading-terminal/) or wish to be supported in the Trading Panel on the [main TradingView Web Platform](http://www.tradingview.com/chart), this is the only documentation you will need. \n\nThe Trading Terminal is a paid standalone B2B product that can be licensed to an individual company. Being supported on the TradingView Web Platform will require paid certification and monthly maintenance fees. Once you pick an option (or maybe choose both), use the REST API to build your bridge from your backend into our system to enable data flow and order execution. \n\nReach out to [founders@tradingview.com](mailto:founders@tradingview.com) with any questions, weâ€™ll be happy to help. \n\nTo be supported on the Web Platform, you will also need to:\n  - Provide a logo in SVG vector format\n  - Let us know if you support TradingView symbology / support mapping\n  - Let us know if you support TradingView data or support history / streaming requests\n\n**ETag**\n\nThe REST API supports ETag on all GET requests. Usage of ETags will result in reduced data traffic and reduced latency.\n\nUsing ETag\n\nResponses to successful GET requests will include the ETag header. This ETag value is a hash of the response body. Save this value if the GET request will be repeated.\nWhen making the same GET request, include the `If-None-Match` header with the ETag value saved from the previous GET response.\nIf the data has not changed, HTTP code `304` is returned with no response body.\nIf the data has changed, the response is returned as usual. A new ETag value is returned and this should be saved for future calls.\n\n\n**Specification**\n\n"
    },
    "host": "api.broker.com",
    "basePath": "/tradingview/v1",
    "schemes": [
        "https"
    ],
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "securityDefinitions": {
        "oauth": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "https://api.broker.com/authorize/?client_id=CLIENT-ID",
            "description": "Look for more request details in /authorize request. TradingView will set Authorization header to 'Bearer ' + access_token for all requests with authorization."
        }
    },
    "parameters": {
        "account-id": {
            "name": "account-id",
            "in": "path",
            "description": "The account identifier",
            "type": "string",
            "required": true
        },
        "order-id": {
            "name": "order-id",
            "description": "Order ID",
            "in": "path",
            "type": "string",
            "required": true
        },
        "position-id": {
            "name": "position-id",
            "description": "Position ID",
            "in": "path",
            "type": "string",
            "required": true
        },
        "symbol": {
            "name": "symbol",
            "in": "query",
            "description": "Symbol name or ticker",
            "required": true,
            "type": "string"
        },
        "resolution": {
            "name": "resolution",
            "in": "query",
            "description": "Symbol resolution",
            "required": true,
            "type": "string"
        },
        "from": {
            "name": "from",
            "in": "query",
            "description": "Unix timestamp (UTC) of leftmost required bar.",
            "required": true,
            "type": "number"
        },
        "to": {
            "name": "to",
            "in": "query",
            "description": "Unix timestamp (UTC) of rightmost required bar",
            "required": true,
            "type": "number"
        },
        "countback": {
            "name": "countback",
            "in": "query",
            "description": "Number of bars (higher priority than from). Trading Terminal will never use it.",
            "type": "number"
        },
        "locale": {
            "name": "locale",
            "in": "query",
            "description": "Locale (language) id",
            "type": "string",
            "enum": [
                "ar",
                "cs",
                "de",
                "el",
                "en",
                "es",
                "fa",
                "fr",
                "hu",
                "it",
                "ja",
                "ko",
                "nl",
                "pl",
                "pt",
                "ro",
                "ru",
                "sk",
                "sv",
                "th",
                "tr",
                "vi",
                "zh"
            ],
            "required": true
        }
    },
    "responses": {
        "200": {
            "description": "OK",
            "schema": {
                "type": "object",
                "required": [
                    "s"
                ],
                "properties": {
                    "s": {
                        "$ref": "#/definitions/Status"
                    },
                    "errmsg": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Integration of data and execution into the TradingView Web Platform",
            "description": ""
        },
        {
            "name": "Integration of only execution into the TradingView Web Platform, i.e. when data is already available",
            "description": ""
        },
        {
            "name": "Trading Terminal data and execution integration",
            "description": ""
        }
    ],
    "paths": {
        "/authorize": {
            "post": {
                "tags": [
                    "site-trading-and-data",
                    "site-trading-only"
                ],
                "description": "Oauth2 Password authorization",
                "parameters": [
                    {
                        "name": "login",
                        "in": "formData",
                        "description": "User Login",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "User Password",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Access Token. TradingView will set Authorization header to 'Bearer ' + access_token for all requests with authorization.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "s"
                            ],
                            "properties": {
                                "s": {
                                    "$ref": "#/definitions/Status"
                                },
                                "errmsg": {
                                    "type": "string"
                                },
                                "d": {
                                    "$ref": "#/definitions/AuthorizationResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/config": {
            "get": {
                "tags": [
                    "site-trading-and-data",
                    "site-trading-only",
                    "terminal"
                ],
                "security": [
                    {
                        "oauth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/locale"
                    }
                ],
                "description": "Get localized configuration",
                "responses": {
                    "200": {
                        "description": "Configuration",
                        "schema": {
                            "type": "object",
                            "required": [
                                "s"
                            ],
                            "properties": {
                                "s": {
                                    "$ref": "#/definitions/Status"
                                },
                                "errmsg": {
                                    "type": "string"
                                },
                                "d": {
                                    "$ref": "#/definitions/ConfigResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts": {
            "get": {
                "tags": [
                    "site-trading-and-data",
                    "site-trading-only",
                    "terminal"
                ],
                "security": [
                    {
                        "oauth": []
                    }
                ],
                "description": "Get a list of accounts owned by the user",
                "responses": {
                    "200": {
                        "description": "Accounts list",
                        "schema": {
                            "type": "object",
                            "required": [
                                "s"
                            ],
                            "properties": {
                                "s": {
                                    "$ref": "#/definitions/Status"
                                },
                                "errmsg": {
                                    "type": "string"
                                },
                                "d": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Account"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/{account-id}/state": {
            "get": {
                "tags": [
                    "site-trading-and-data",
                    "site-trading-only",
                    "terminal"
                ],
                "security": [
                    {
                        "oauth": []
                    }
                ],
                "description": "Get account information.",
                "parameters": [
                    {
                        "$ref": "#/parameters/account-id"
                    },
                    {
                        "$ref": "#/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "required": [
                                "s"
                            ],
                            "properties": {
                                "s": {
                                    "$ref": "#/definitions/Status"
                                },
                                "errmsg": {
                                    "type": "string"
                                },
                                "d": {
                                    "$ref": "#/definitions/AccountStateResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/{account-id}/orders": {
            "get": {
                "tags": [
                    "site-trading-and-data",
                    "site-trading-only",
                    "terminal"
                ],
                "security": [
                    {
                        "oauth": []
                    }
                ],
                "description": "Get pending orders for an account.",
                "parameters": [
                    {
                        "$ref": "#/parameters/account-id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of pending orders. It is also expected that broker returns orders filled/cancelled/rejected during current session.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "s"
                            ],
                            "properties": {
                                "s": {
                                    "$ref": "#/definitions/Status"
                                },
                                "errmsg": {
                                    "type": "string"
                                },
                                "d": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Order"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "site-trading-and-data",
                    "site-trading-only",
                    "terminal"
                ],
                "security": [
                    {
                        "oauth": []
                    }
                ],
                "description": "Create a new order",
                "parameters": [
                    {
                        "$ref": "#/parameters/account-id"
                    },
                    {
                        "name": "instrument",
                        "in": "formData",
                        "description": "Instrument to open the order on",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "qty",
                        "in": "formData",
                        "description": "The number of units to open order for",
                        "type": "number",
                        "required": true
                    },
                    {
                        "name": "side",
                        "in": "formData",
                        "description": "Side. Possible values - `buy` and `sell`.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "buy",
                            "sell"
                        ]
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "description": "Type. Possible values - `market`, `stop`, `limit`, `stoplimit`.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "market",
                            "stop",
                            "limit",
                            "stoplimit"
                        ]
                    },
                    {
                        "name": "limitPrice",
                        "in": "formData",
                        "description": "Limit Price for Limit or StopLimit order",
                        "type": "number"
                    },
                    {
                        "name": "stopPrice",
                        "in": "formData",
                        "description": "Limit Price for Limit or StopLimit order",
                        "type": "number"
                    },
                    {
                        "name": "durationType",
                        "in": "formData",
                        "description": "Duration ID (if supported)",
                        "type": "string"
                    },
                    {
                        "name": "durationDateTime",
                        "in": "formData",
                        "description": "Expiration datetime UNIX timestamp (if supported by duration type)",
                        "type": "number"
                    },
                    {
                        "name": "stopLoss",
                        "in": "formData",
                        "description": "StopLoss price (if supported)",
                        "type": "number"
                    },
                    {
                        "name": "takeProfit",
                        "in": "formData",
                        "description": "TakeProfit price (if supported)",
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status. `message` should be filled if erroneous. `orderId` should present if successful.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "s"
                            ],
                            "properties": {
                                "s": {
                                    "$ref": "#/definitions/Status"
                                },
                                "errmsg": {
                                    "type": "string"
                                },
                                "d": {
                                    "type": "object",
                                    "properties": {
                                        "orderId": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/{account-id}/ordersHistory": {
            "get": {
                "tags": [
                    "site-trading-and-data",
                    "site-trading-only",
                    "terminal"
                ],
                "security": [
                    {
                        "oauth": []
                    }
                ],
                "description": "Get order history for an account. It is expected that returned orders will have a final status (rejected, filled, canceled).",
                "parameters": [
                    {
                        "$ref": "#/parameters/account-id"
                    },
                    {
                        "name": "maxCount",
                        "description": "Maximum amount of orders to return",
                        "in": "query",
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of orders",
                        "schema": {
                            "type": "object",
                            "required": [
                                "s"
                            ],
                            "properties": {
                                "s": {
                                    "$ref": "#/definitions/Status"
                                },
                                "errmsg": {
                                    "type": "string"
                                },
                                "d": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Order"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/{account-id}/orders/{order-id}": {
            "get": {
                "tags": [
                    "site-trading-and-data",
                    "site-trading-only",
                    "terminal"
                ],
                "security": [
                    {
                        "oauth": []
                    }
                ],
                "description": "Get an order for an account. It can be an active or historical order.",
                "parameters": [
                    {
                        "$ref": "#/parameters/account-id"
                    },
                    {
                        "$ref": "#/parameters/order-id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order",
                        "schema": {
                            "type": "object",
                            "required": [
                                "s"
                            ],
                            "properties": {
                                "s": {
                                    "$ref": "#/definitions/Status"
                                },
                                "errmsg": {
                                    "type": "string"
                                },
                                "d": {
                                    "$ref": "#/definitions/Order"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "site-trading-and-data",
                    "site-trading-only",
                    "terminal"
                ],
                "security": [
                    {
                        "oauth": []
                    }
                ],
                "description": "Modify an existing order",
                "parameters": [
                    {
                        "$ref": "#/parameters/account-id"
                    },
                    {
                        "$ref": "#/parameters/order-id"
                    },
                    {
                        "name": "qty",
                        "in": "formData",
                        "description": "The number of units to open order for",
                        "type": "number"
                    },
                    {
                        "name": "limitPrice",
                        "in": "formData",
                        "description": "Limit Price for Limit or StopLimit order",
                        "type": "number"
                    },
                    {
                        "name": "stopPrice",
                        "in": "formData",
                        "description": "Limit Price for Limit or StopLimit order",
                        "type": "number"
                    },
                    {
                        "name": "stopLoss",
                        "in": "formData",
                        "description": "StopLoss price (if supported)",
                        "type": "number"
                    },
                    {
                        "name": "takeProfit",
                        "in": "formData",
                        "description": "TakeProfit price (if supported)",
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/200"
                    }
                }
            },
            "delete": {
                "tags": [
                    "site-trading-and-data",
                    "site-trading-only",
                    "terminal"
                ],
                "security": [
                    {
                        "oauth": []
                    }
                ],
                "description": "Cancel an existing order",
                "parameters": [
                    {
                        "$ref": "#/parameters/account-id"
                    },
                    {
                        "$ref": "#/parameters/order-id"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/200"
                    }
                }
            }
        },
        "/accounts/{account-id}/positions": {
            "get": {
                "tags": [
                    "site-trading-and-data",
                    "site-trading-only",
                    "terminal"
                ],
                "security": [
                    {
                        "oauth": []
                    }
                ],
                "description": "Get positions for an account",
                "parameters": [
                    {
                        "$ref": "#/parameters/account-id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of positions",
                        "schema": {
                            "type": "object",
                            "required": [
                                "s"
                            ],
                            "properties": {
                                "s": {
                                    "$ref": "#/definitions/Status"
                                },
                                "errmsg": {
                                    "type": "string"
                                },
                                "d": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Position"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/{account-id}/positions/{position-id}": {
            "get": {
                "tags": [
                    "site-trading-and-data",
                    "site-trading-only",
                    "terminal"
                ],
                "security": [
                    {
                        "oauth": []
                    }
                ],
                "description": "Get a position for an account",
                "parameters": [
                    {
                        "$ref": "#/parameters/account-id"
                    },
                    {
                        "$ref": "#/parameters/position-id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Position object",
                        "schema": {
                            "type": "object",
                            "required": [
                                "s"
                            ],
                            "properties": {
                                "s": {
                                    "$ref": "#/definitions/Status"
                                },
                                "errmsg": {
                                    "type": "string"
                                },
                                "d": {
                                    "$ref": "#/definitions/Position"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "site-trading-and-data",
                    "site-trading-only",
                    "terminal"
                ],
                "security": [
                    {
                        "oauth": []
                    }
                ],
                "description": "Modify an existing position stop loss or take profit or both",
                "parameters": [
                    {
                        "$ref": "#/parameters/account-id"
                    },
                    {
                        "$ref": "#/parameters/position-id"
                    },
                    {
                        "name": "stopLoss",
                        "in": "formData",
                        "description": "StopLoss price",
                        "type": "number"
                    },
                    {
                        "name": "takeProfit",
                        "in": "formData",
                        "description": "TakeProfit price",
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/200"
                    }
                }
            },
            "delete": {
                "tags": [
                    "site-trading-and-data",
                    "site-trading-only",
                    "terminal"
                ],
                "security": [
                    {
                        "oauth": []
                    }
                ],
                "description": "Close an existing position",
                "parameters": [
                    {
                        "$ref": "#/parameters/account-id"
                    },
                    {
                        "$ref": "#/parameters/position-id"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/200"
                    }
                }
            }
        },
        "/accounts/{account-id}/executions": {
            "get": {
                "tags": [
                    "site-trading-and-data",
                    "site-trading-only",
                    "terminal"
                ],
                "security": [
                    {
                        "oauth": []
                    }
                ],
                "description": "Get a list of executions (i.e. fills or trades) for an account and an instrument. Executions are displayed on a chart",
                "parameters": [
                    {
                        "$ref": "#/parameters/account-id"
                    },
                    {
                        "name": "instrument",
                        "description": "Broker instrument name",
                        "in": "formData",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "maxCount",
                        "description": "Maximum count of executions to return",
                        "in": "formData",
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of executions",
                        "schema": {
                            "type": "object",
                            "required": [
                                "s"
                            ],
                            "properties": {
                                "s": {
                                    "$ref": "#/definitions/Status"
                                },
                                "errmsg": {
                                    "type": "string"
                                },
                                "d": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Execution"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/{account-id}/instruments": {
            "get": {
                "tags": [
                    "site-trading-and-data",
                    "site-trading-only",
                    "terminal"
                ],
                "security": [
                    {
                        "oauth": []
                    }
                ],
                "description": "Get a list of tradeable instruments that are available for trading with the account specified",
                "parameters": [
                    {
                        "$ref": "#/parameters/account-id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of instruments",
                        "schema": {
                            "type": "object",
                            "required": [
                                "s"
                            ],
                            "properties": {
                                "s": {
                                    "$ref": "#/definitions/Status"
                                },
                                "errmsg": {
                                    "type": "string"
                                },
                                "d": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Instrument"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/mapping": {
            "get": {
                "tags": [
                    "site-trading-and-data",
                    "site-trading-only"
                ],
                "description": "Return all broker instruments with corresponding TradingView instruments. It is required to add a Broker to TradingView.com. It is not required for Trading Terminal integration. This request works without authorization!",
                "responses": {
                    "200": {
                        "description": "Broker - TradingView instruments map",
                        "schema": {
                            "$ref": "#/definitions/SymbolMapping"
                        }
                    }
                }
            }
        },
        "/symbol_info": {
            "get": {
                "tags": [
                    "site-trading-and-data",
                    "terminal"
                ],
                "security": [
                    {
                        "oauth": []
                    }
                ],
                "description": "Get a list of all instruments of a specific group",
                "parameters": [
                    {
                        "name": "group",
                        "in": "query",
                        "description": "Group name (example, NYSE)",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of instruments",
                        "schema": {
                            "$ref": "#/definitions/SymbolInfoArrays"
                        }
                    }
                }
            }
        },
        "/history": {
            "get": {
                "tags": [
                    "site-trading-and-data",
                    "terminal"
                ],
                "security": [
                    {
                        "oauth": []
                    }
                ],
                "description": "Bars request. You can find examples in the [documentation](https://github.com/tradingview/charting_library/wiki/UDF#bars).",
                "parameters": [
                    {
                        "$ref": "#/parameters/symbol"
                    },
                    {
                        "$ref": "#/parameters/resolution"
                    },
                    {
                        "$ref": "#/parameters/from"
                    },
                    {
                        "$ref": "#/parameters/to"
                    },
                    {
                        "$ref": "#/parameters/countback"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response is expected to be an object with properties listed below. Each property is treated as a table column",
                        "schema": {
                            "$ref": "#/definitions/BarsArrays"
                        }
                    }
                }
            }
        },
        "/marks": {
            "get": {
                "tags": [
                    "terminal"
                ],
                "security": [
                    {
                        "oauth": []
                    }
                ],
                "description": "Request for bar marks (circles on top of bars). You can display custom marks only in the Trading Terminal",
                "parameters": [
                    {
                        "$ref": "#/parameters/symbol"
                    },
                    {
                        "$ref": "#/parameters/resolution"
                    },
                    {
                        "$ref": "#/parameters/from"
                    },
                    {
                        "$ref": "#/parameters/to"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response is expected to be an object with properties listed below. Each property is an array",
                        "schema": {
                            "$ref": "#/definitions/MarksArrays"
                        }
                    }
                }
            }
        },
        "/timescale_marks": {
            "get": {
                "tags": [
                    "terminal"
                ],
                "security": [
                    {
                        "oauth": []
                    }
                ],
                "description": "Request for timescale marks (circles on the timescale). You can display custom marks only in the Trading Terminal",
                "parameters": [
                    {
                        "$ref": "#/parameters/symbol"
                    },
                    {
                        "$ref": "#/parameters/resolution"
                    },
                    {
                        "$ref": "#/parameters/from"
                    },
                    {
                        "$ref": "#/parameters/to"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response is expected to be an object with properties listed below. Each property is an array",
                        "schema": {
                            "$ref": "#/definitions/TimescaleMarksArrays"
                        }
                    }
                }
            }
        },
        "/quotes": {
            "get": {
                "tags": [
                    "site-trading-and-data",
                    "site-trading-only",
                    "terminal"
                ],
                "security": [
                    {
                        "oauth": []
                    }
                ],
                "description": "Get current prices of the instrument",
                "parameters": [
                    {
                        "name": "symbols",
                        "in": "query",
                        "type": "string",
                        "description": "comma separated symbols",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Current prices",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "s": {
                                    "description": "Status code for request",
                                    "type": "string",
                                    "enum": [
                                        "ok",
                                        "error"
                                    ]
                                },
                                "errmsg": {
                                    "description": "Error message",
                                    "type": "string"
                                },
                                "d": {
                                    "description": "Data",
                                    "type": "array",
                                    "items": [
                                        {
                                            "$ref": "#/definitions/QuotesResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/streaming": {
            "get": {
                "tags": [
                    "site-trading-and-data"
                ],
                "security": [
                    {
                        "oauth": []
                    }
                ],
                "description": "Stream of prices. Server constantly keeps the connection alive. If the connection is broken the server constantly tries to restore it. Transfer mode is 'chunked encoding'. The data feed should set 'Transfer-Encoding: chunked' and make sure that all intermediate proxies are set to use this mode. All messages are finished with '\\r\\n'. Streaming data should contain real-time only. It shouldn't contain snapshots of data.",
                "responses": {
                    "200": {
                        "description": "Data feed should provide ticks (trades, asks, bids) and daily bars. \n\nIf there is no trades the data feed should set trades to bids. \n\nIf there is only ask/bid implementation you must also set the trade (same as bid but it's size must be >= 1).\n\nSize for trades is always >= 1 except for a correction. \n\nIn case of correction is can be 0. All times should be UNIX time UTC. \n\nDaily bars are required if they cannot be built from ticks (has_dwm should be set to true in the symbol information). \n\nFields for asks, bids and trades: `id`, `p`, `s` (optional for asks and bids), `t`, `f`. \n\nFields for daily bars: `id`, `t`, `o`, `h`, `l`, `c`, `v`.\n",
                        "schema": {
                            "type": "object",
                            "required": [
                                "id",
                                "t"
                            ],
                            "properties": {
                                "id": {
                                    "description": "Symbol",
                                    "type": "string"
                                },
                                "p": {
                                    "description": "Price",
                                    "type": "number"
                                },
                                "s": {
                                    "description": "Size",
                                    "type": "number"
                                },
                                "t": {
                                    "description": "Time",
                                    "type": "number"
                                },
                                "f": {
                                    "description": "Type (a - ask, b - bid, t - trade, d - daily bar). Default value is `t` (trade).",
                                    "type": "string",
                                    "enum": [
                                        "a",
                                        "b",
                                        "d",
                                        "t"
                                    ]
                                },
                                "o": {
                                    "description": "Open",
                                    "type": "number"
                                },
                                "h": {
                                    "description": "High",
                                    "type": "number"
                                },
                                "l": {
                                    "description": "Low",
                                    "type": "number"
                                },
                                "c": {
                                    "description": "Close",
                                    "type": "number"
                                },
                                "v": {
                                    "description": "Volume",
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Status": {
            "type": "string",
            "enum": [
                "ok",
                "error"
            ]
        },
        "AuthorizationResponse": {
            "description": "Authorization Response",
            "type": "object",
            "required": [
                "access_token",
                "expiration"
            ],
            "properties": {
                "access_token": {
                    "description": "Access token acts as a session ID that the application uses for making requests. This token should be protected as if it were user credentials",
                    "type": "string"
                },
                "expiration": {
                    "description": "The time when the token is expired is represented as the number of seconds since the Unix epoch (00:00:00 UTC on 1 January 1970)",
                    "type": "number"
                }
            }
        },
        "ConfigResponse": {
            "type": "object",
            "properties": {
                "accountManager": {
                    "type": "array",
                    "description": "Localized account manager's tables configuration",
                    "items": {
                        "$ref": "#/definitions/AccountManagerTable"
                    }
                },
                "durations": {
                    "type": "array",
                    "description": "Localized array of durations displayed in Order Ticket",
                    "items": {
                        "$ref": "#/definitions/Duration"
                    }
                }
            }
        },
        "AccountStateResponse": {
            "type": "object",
            "required": [
                "balance",
                "unrealizedPl"
            ],
            "properties": {
                "balance": {
                    "description": "Account Balance",
                    "type": "number"
                },
                "unrealizedPl": {
                    "description": "Unrealized Profit/loss",
                    "type": "number"
                },
                "amData": {
                    "description": "Account Manager data. Each element of this array is a table.",
                    "type": "array",
                    "items": {
                        "description": "Single Account Manager table data. Each element of this array is a table raw",
                        "type": "array",
                        "items": {
                            "description": "Account Manager table raw data. Each element of this array is a table cell",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "Duration": {
            "description": "Single duration option",
            "type": "object",
            "required": [
                "id",
                "title"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "title": {
                    "description": "Localized title",
                    "type": "string"
                },
                "hasDatePicker": {
                    "description": "Display date control in Order Ticket for this duration type",
                    "type": "boolean"
                },
                "hasTimePicker": {
                    "description": "Display time control in Order Ticket for this duration type",
                    "type": "boolean"
                }
            }
        },
        "AccountManagerTable": {
            "type": "object",
            "required": [
                "id",
                "title",
                "columns"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "title": {
                    "description": "Localized title of a table",
                    "type": "string"
                },
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountManagerColumn"
                    }
                }
            }
        },
        "AccountManagerColumn": {
            "type": "object",
            "required": [
                "id",
                "title"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "title": {
                    "description": "Localized title of a column",
                    "type": "string"
                },
                "tooltip": {
                    "description": "Tooltip that is shown on mouse hover",
                    "type": "string"
                },
                "fixedWidth": {
                    "description": "Set it to true if data length is frequently changed",
                    "type": "boolean"
                },
                "sortable": {
                    "description": "Set it to false if this columns data should not be sortable",
                    "type": "boolean"
                }
            }
        },
        "Account": {
            "type": "object",
            "required": [
                "id",
                "name",
                "config"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "description": "Account title that is displayed to a user",
                    "type": "string"
                },
                "currency": {
                    "description": "Abbreviation of account currency",
                    "type": "string"
                },
                "currencySign": {
                    "description": "Account currency symbol",
                    "type": "string"
                },
                "config": {
                    "$ref": "#/definitions/AccountFlags"
                }
            }
        },
        "AccountFlags": {
            "type": "object",
            "properties": {
                "showQuantityInsteadOfAmount": {
                    "description": "Renames Amount to Quantity in the Order Ticket",
                    "type": "boolean"
                },
                "supportDOM": {
                    "description": "Whether you want for DOM widget to be available",
                    "type": "boolean"
                },
                "supportBrackets": {
                    "description": "Whether you support brackets",
                    "type": "boolean"
                },
                "supportClosePosition": {
                    "description": "Whether you support native closing of a position",
                    "type": "boolean"
                },
                "supportEditAmount": {
                    "description": "Whether you support editing orders quantity",
                    "type": "boolean"
                },
                "supportLevel2Data": {
                    "description": "Whether you support Level 2 data. It is required to display DOM levels. You must implement `/streaming` to display DOM.",
                    "type": "boolean"
                },
                "supportMultiposition": {
                    "description": "Whether you support multiple positions at the same time",
                    "type": "boolean"
                },
                "supportPLUpdate": {
                    "description": "Whether you provide `unrealizedPl` for positions. Otherwise P&L will be calculated automatically based on a simple algorithm",
                    "type": "boolean"
                },
                "supportReducePosition": {
                    "description": "Reserved for future use",
                    "type": "boolean"
                },
                "supportReversePosition": {
                    "description": "Whether you support reverse position by placing an opposite order",
                    "type": "boolean"
                },
                "supportStopLimitOrders": {
                    "description": "Whether you support StopLimit orders",
                    "type": "boolean"
                },
                "supportOrdersHistory": {
                    "description": "Whether you support /ordersHistory request",
                    "type": "boolean"
                }
            }
        },
        "Instrument": {
            "type": "object",
            "required": [
                "name",
                "description"
            ],
            "properties": {
                "name": {
                    "description": "Broker instrument name",
                    "type": "string"
                },
                "description": {
                    "description": "Instrument description",
                    "type": "string"
                },
                "minQty": {
                    "description": "Minimum quantity for trading",
                    "type": "number"
                },
                "maxQty": {
                    "description": "Maximum quantity for trading",
                    "type": "number"
                },
                "qtyStep": {
                    "description": "Quantity step",
                    "type": "number"
                },
                "pipSize": {
                    "description": "Size of 1 pip",
                    "type": "number"
                },
                "pipValue": {
                    "description": "Value of 1 pip in account currency",
                    "type": "number"
                },
                "minTick": {
                    "description": "Minimum price movement",
                    "type": "number"
                }
            }
        },
        "Order": {
            "type": "object",
            "required": [
                "id",
                "instrument",
                "qty",
                "side",
                "type",
                "status"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "instrument": {
                    "description": "Instrument name that is used on a broker's side",
                    "type": "string"
                },
                "qty": {
                    "description": "Quantity",
                    "type": "number"
                },
                "side": {
                    "description": "Side. Possible values - \"buy\" and \"sell\".",
                    "type": "string",
                    "enum": [
                        "buy",
                        "sell"
                    ]
                },
                "type": {
                    "description": "Type. Possible values - \"market\", \"stop\", \"limit\", \"stoplimit\".",
                    "type": "string",
                    "enum": [
                        "market",
                        "stop",
                        "limit",
                        "stoplimit"
                    ]
                },
                "filledQty": {
                    "description": "Filled quantity.",
                    "type": "number"
                },
                "parentId": {
                    "description": "Identified of parent order or parent position (for position brackets) depending on parentType. Should be set for bracket orders.",
                    "type": "string"
                },
                "parentType": {
                    "description": "Type of order parent. Should be set for bracket orders.",
                    "type": "string",
                    "enum": [
                        "order",
                        "position"
                    ]
                },
                "duration": {
                    "description": "Expiration type and UNIX timestamp date/time",
                    "type": "object",
                    "required": [
                        "type"
                    ],
                    "properties": {
                        "type": {
                            "description": "Duration ID",
                            "type": "string"
                        },
                        "datetime": {
                            "description": "Unit timestamp (UTC)",
                            "type": "number"
                        }
                    }
                },
                "status": {
                    "description": "String constants to describe an order status.\n\n`Status`    | Description \n----------|-------------\npending \t| order is not created on a broker's side yet \ninactive \t| bracket order is created but waiting for a base order to be filled \nworking\t| order is created but not executed yet \nrejected\t| order is rejected for some reason \nfilled\t| order is fully executed \ncanceled\t| order is canceled \n",
                    "type": "string",
                    "enum": [
                        "pending",
                        "inactive",
                        "working",
                        "rejected",
                        "filled",
                        "cancelled"
                    ]
                }
            }
        },
        "Position": {
            "type": "object",
            "required": [
                "id",
                "instrument",
                "qty",
                "side",
                "avgPrice"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "instrument": {
                    "description": "Instrument name that is used on a broker's side",
                    "type": "string"
                },
                "qty": {
                    "description": "Quantity",
                    "type": "number"
                },
                "side": {
                    "description": "Side. Possible values - \"buy\" and \"sell\".",
                    "type": "string",
                    "enum": [
                        "buy",
                        "cell"
                    ]
                },
                "avgPrice": {
                    "description": "Average price of position trades",
                    "type": "number"
                },
                "unrealizedPl": {
                    "description": "Unrealized (open) profit/loss"
                },
                "realizedPl": {
                    "description": "Realized profit/loss for this instrument"
                }
            }
        },
        "Execution": {
            "type": "object",
            "required": [
                "instrument",
                "price",
                "time",
                "qty",
                "side"
            ],
            "properties": {
                "instrument": {
                    "description": "Instrument id",
                    "type": "string"
                },
                "price": {
                    "description": "Execution price",
                    "type": "number"
                },
                "time": {
                    "description": "Execution time",
                    "type": "number"
                },
                "qty": {
                    "description": "Execution quantity",
                    "type": "number"
                },
                "side": {
                    "description": "Side. Possible values - \"buy\" and \"sell\".",
                    "type": "string",
                    "enum": [
                        "buy",
                        "cell"
                    ]
                }
            }
        },
        "SymbolInfoArrays": {
            "type": "object",
            "description": "SymbolInfo is an object containing symbols metadata. Each value of this object is an array of values which size is equal to the length of symbols or a single value that is applied to all symbols.",
            "required": [
                "symbol",
                "description",
                "exchange-listed",
                "exchange-traded",
                "minmovement",
                "pricescale",
                "timezone",
                "session-regular"
            ],
            "properties": {
                "symbol": {
                    "description": "It's name of a symbol. It is a string which your users will see. Also, it will be used for data requests if you are not using tickers.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "description": "Description of a symbol. Will be printed in chart legend for this symbol.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exchange-listed": {
                    "description": "Short name of exchange where this symbol is listed",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exchange-traded": {
                    "description": "Short name of exchange where this symbol is traded",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "minmovement": {
                    "description": "Minimal integer price change",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "minmov2": {
                    "description": "It's a number for complex price formatting cases",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "fractional": {
                    "description": "Boolean showing whether this symbol wants to have complex price formatting (see minmov2 below) or not",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "pricescale": {
                    "description": "MinimalPossiblePriceChange = minmovement / pricescale",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "has-intraday": {
                    "description": "Boolean showing whether symbol has intraday (minutes) history data. If it's false then all buttons for intradays resolutions will be disabled when this symbol is active in chart. If it is set to true, all resolutions that are supplied directly by the datafeed must be provided in intraday_multipliers array.",
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    }
                },
                "has-no-volume": {
                    "description": "Boolean showing whether symbol has volume data or not",
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    }
                },
                "type": {
                    "description": "Symbol type (forex/stock etc.)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ticker": {
                    "description": "It's an unique identifier for this symbol in your symbology. If you specify this property then its value will be used for all data requests for this symbol. ticker is treated to be equal to symbol if not specified explicitly.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timezone": {
                    "description": "Exchange timezone for this symbol. We expect to get name of time zone in olsondb format",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "enum": [
                        "America/New_York",
                        "America/Los_Angeles",
                        "America/Chicago",
                        "America/Phoenix",
                        "America/Toronto",
                        "America/Vancouver",
                        "America/Argentina/Buenos_Aires",
                        "America/El_Salvador",
                        "America/Sao_Paulo",
                        "America/Bogota",
                        "Europe/Moscow",
                        "Europe/Athens",
                        "Europe/Berlin",
                        "Europe/London",
                        "Europe/Madrid",
                        "Europe/Paris",
                        "Europe/Warsaw",
                        "Australia/Sydney",
                        "Australia/Brisbane",
                        "Australia/Adelaide",
                        "Australia/ACT",
                        "Asia/Almaty",
                        "Asia/Ashkhabad",
                        "Asia/Tokyo",
                        "Asia/Taipei",
                        "Asia/Singapore",
                        "Asia/Shanghai",
                        "Asia/Seoul",
                        "Asia/Tehran",
                        "Asia/Dubai",
                        "Asia/Kolkata",
                        "Asia/Hong_Kong",
                        "Asia/Bangkok",
                        "Pacific/Auckland",
                        "Pacific/Chatham",
                        "Pacific/Fakaofo",
                        "Pacific/Honolulu",
                        "America/Mexico_City",
                        "Africa/Johannesburg",
                        "Asia/Kathmandu",
                        "US/Mountain"
                    ]
                },
                "session-regular": {
                    "description": "Trading hours for this symbol. See the [Trading Sessions](https://github.com/tradingview/charting_library/wiki/Trading-Sessions) article to know more details.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "supported-resolutions": {
                    "description": "An array of resolutions which should be enabled in resolutions picker for this symbol. Each item of an array is expected to be a string.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "has-daily": {
                    "description": "The boolean value showing whether datafeed has its own D resolution bars or not. If has_daily = false then Charting Library will build respective resolutions from intraday by itself. If not, then it will request those bars from datafeed.",
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    }
                },
                "intraday-multipliers": {
                    "description": "It is an array containing intraday resolutions (in minutes) the datafeed wants to build by itself. E.g., if the datafeed reported he supports resolutions [\"1\", \"5\", \"15\"], but in fact it has only 1 minute bars for symbol X, it should set intraday_multipliers of X = [1]. This will make Charting Library to build 5 and 15 resolutions by itself.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "has-weekly-and-monthly": {
                    "description": "The boolean value showing whether datafeed has its own W and M resolution bars or not. If has_weekly_and_monthly = false then Charting Library will build respective resolutions from D by itself. If not, then it will request those bars from datafeed.",
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    }
                }
            }
        },
        "BarsArrays": {
            "type": "object",
            "description": "Bars data.",
            "required": [
                "s"
            ],
            "properties": {
                "s": {
                    "description": "Status code.",
                    "type": "string",
                    "enum": [
                        "ok",
                        "error",
                        "no_data"
                    ]
                },
                "errmsg": {
                    "description": "Error message. Should be provided if s = \"error\"",
                    "type": "string"
                },
                "nb": {
                    "description": "unix time of the next bar if there is no data (status code is no_data) in the requested period (optional)",
                    "type": "number"
                },
                "t": {
                    "description": "bar time, unix timestamp (UTC). Daily bars should only have the date part, time should be 0.",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "o": {
                    "description": "open price",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "h": {
                    "description": "high price",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "l": {
                    "description": "low price",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "c": {
                    "description": "close price",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "v": {
                    "description": "volume",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            }
        },
        "MarksArrays": {
            "type": "object",
            "description": "Bar marks data.",
            "required": [
                "id",
                "time",
                "label"
            ],
            "properties": {
                "id": {
                    "description": "Unique identifiers of marks.",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "time": {
                    "description": "bar time, unix timestamp (UTC)",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "color": {
                    "description": "Mark colors",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "enum": [
                        "red",
                        "green",
                        "blue",
                        "yellow"
                    ]
                },
                "text": {
                    "description": "mark popup text. HTML supported",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "label": {
                    "description": "a letter to be printed on a mark. Single character",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "labelFontColor": {
                    "description": "color of a letter on a mark",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "enum": [
                        "red",
                        "green",
                        "blue",
                        "yellow"
                    ]
                },
                "minSize": {
                    "description": "minimal size of mark (diameter, pixels)",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            }
        },
        "TimescaleMarksArrays": {
            "type": "object",
            "description": "Timescale marks data.",
            "required": [
                "id",
                "time",
                "label"
            ],
            "properties": {
                "id": {
                    "description": "Unique identifiers of marks",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "time": {
                    "description": "bar time, unix timestamp (UTC)",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "color": {
                    "description": "Mark colors",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "enum": [
                        "red",
                        "green",
                        "blue",
                        "yellow"
                    ]
                },
                "tooltip": {
                    "description": "tooltip text",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "label": {
                    "description": "a letter to be printed on a mark. Single character",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "QuotesResponse": {
            "type": "object",
            "description": "Price response for an instrument",
            "required": [
                "s",
                "n",
                "v"
            ],
            "properties": {
                "s": {
                    "description": "Status code for request",
                    "type": "string",
                    "enum": [
                        "ok",
                        "error"
                    ]
                },
                "n": {
                    "description": "Symbol name. Should be equal to the requested one",
                    "type": "string"
                },
                "v": {
                    "$ref": "#/definitions/SingleQuote"
                }
            }
        },
        "SingleQuote": {
            "type": "object",
            "description": "Price data for an instrument",
            "properties": {
                "ch": {
                    "description": "Change (displayed in Watch and Detail)",
                    "type": "string"
                },
                "chp": {
                    "description": "Change percent (displayed in Watch and Detail)",
                    "type": "string"
                },
                "lp": {
                    "description": "Last price",
                    "type": "number"
                },
                "ask": {
                    "description": "Ask price",
                    "type": "number"
                },
                "bid": {
                    "description": "Bid price",
                    "type": "number"
                },
                "open_price": {
                    "description": "Open",
                    "type": "number"
                },
                "high_price": {
                    "description": "High price",
                    "type": "number"
                },
                "low_price": {
                    "description": "Low price",
                    "type": "number"
                },
                "prev_close_price": {
                    "description": "Previous close price",
                    "type": "number"
                },
                "volume": {
                    "description": "Volume",
                    "type": "number"
                }
            }
        },
        "SymbolMapping": {
            "type": "object",
            "description": "Map of Broker instrument names and TradingView instrument names",
            "properties": {
                "symbols": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SingleMapping"
                    }
                },
                "fields": {
                    "description": "Array with the only one constant 'brokerSymbol' value.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SingleField"
                    }
                }
            }
        },
        "SingleMapping": {
            "type": "object",
            "description": "Map of Broker instrument name to TradingView instrument name",
            "properties": {
                "f": {
                    "description": "An array with the only one string element - broker symbol name.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "s": {
                    "description": "TradingView symbol name with prefix (AA:XXXX)",
                    "type": "string"
                }
            }
        },
        "SingleField": {
            "type": "string",
            "enum": [
                "brokerSymbol"
            ],
            "description": "Constant. Should not be changed."
        }
    }
}